Algorithm:

1.Set low to the first index (0), and high to the last index.

2.Find the middle index â†’ (low + high) / 2.

3.If the middle number is the target, return the index.

4.If the target is smaller than the middle number:

  -Look in the left half (set high = mid - 1).

5.If the target is larger:

  -Look in the right half (set low = mid + 1).

6.Repeat until low > high.

7.If the number is not found, return -1.



Pseudocode:

low = 0
high = n - 1
while low <= high:
    mid = (low + high) / 2
    if arr[mid] == target:
        return mid
    else if arr[mid] < target:
        low = mid + 1
    else:
        high = mid - 1



C Code

#include <stdio.h>

int binarySearch(int arr[], int n, int target) {
    int low = 0, high = n - 1;
    while(low <= high) {
        int mid = (low + high) / 2;
        if(arr[mid] == target)
            return mid;
        else if(arr[mid] < target)
            low = mid + 1;
        else
            high = mid - 1;
    }
    return -1;
}
